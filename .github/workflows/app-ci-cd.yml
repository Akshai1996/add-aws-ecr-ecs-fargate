name: docker-build-deploy
on:
  workflow_dispatch:
  push:
    branches: [ '*' ]
    paths:
      - 'app/**'
      - '.github/workflows/app-ci-cd.yml'
  pull_request:
    branches: ["main"]
    paths:
      - 'app/**'
env:
  AWS_REGION: us-east-2                   # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: app-4
permissions: read-all
jobs:
  build:
    name: 'continuous-integration'
    runs-on: ubuntu-latest
    environment: development
    permissions:
      contents: read
      id-token: write
      pull-requests: write
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: ./app

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y%m%d')"
      env:
          TAG_NAME: ${{ steps.date.outputs.date }}
    - name: Print Tag Name
      run: echo "Tag Name is ${{ env.TAG_NAME }}.${{ github.run_number }}.${{ github.run_attempt }}"
    - name: Print Date
      run: echo "Date is ${{ steps.date.outputs.date }}"
    - name: Print Environment value
      run: echo "TAG_NAME is ${{ env.TAG_NAME }}"
    # - name: Configure AWS Credentials Action For GitHub Actions
    #   uses: aws-actions/configure-aws-credentials@v4
    #   with:
    #     role-to-assume: ${{ secrets.IAM_ROLE }}
    #     role-session-name: AWSSession
    #     aws-region: ${{ env.AWS_REGION }}
    # # https://github.com/marketplace/actions/amazon-ecr-login-action-for-github-actions
    # - name: Login to Amazon ECR Private
    #   id: login-ecr
    #   uses: aws-actions/amazon-ecr-login@v2.0.1
    #   with:
    #     mask-password: 'true'
    # - name: Build, tag, and push docker image to Amazon ECR
    #   env:
    #     REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     REPOSITORY: ${{ env.ECR_REPOSITORY }}
    #     IMAGE_TAG: ${{ env.TAG_NAME }} #${{ github.sha }}
    #   run: |
    #     docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
    #     docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG